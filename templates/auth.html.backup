<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - School Management System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.13.3/cdn.min.js" defer></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen" x-data="authSystem()" x-init="init()">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-6">
                <div class="flex items-center">
                    <i class="fas fa-graduation-cap text-3xl text-indigo-600 mr-3"></i>
                    <div>
                        <h1 class="text-2xl font-bold text-gray-900">Excellence Academy</h1>
                        <p class="text-sm text-gray-600">Management System</p>
                    </div>
                </div>
                <div>
                    <a href="/" class="text-gray-600 hover:text-indigo-600">
                        <i class="fas fa-home mr-2"></i>Home
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-md mx-auto px-4 py-12">
        <!-- Login Form -->
        <div class="bg-white rounded-xl shadow-2xl p-8">
            <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Login to Portal</h2>

            <form @submit.prevent="login()">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Email or Username</label>
                    <input type="text" x-model="loginForm.email_or_username" 
                           class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                           placeholder="Enter email or username" required>
                </div>
                
                <div class="mb-6">
                    <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                    <div class="relative">
                        <input :type="showPassword ? 'text' : 'password'" x-model="loginForm.password" 
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 pr-10"
                               placeholder="Enter password" required>
                        <button type="button" @click="showPassword = !showPassword" 
                                class="absolute right-3 top-3 text-gray-500 hover:text-gray-700">
                            <i :class="showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'"></i>
                        </button>
                    </div>
                </div>
                
                <div x-show="loginError" class="mb-4 p-3 bg-red-50 border border-red-200 rounded-lg">
                    <p class="text-red-700 text-sm" x-text="loginError"></p>
                </div>
                
                <button type="submit" :disabled="loginLoading" 
                        class="w-full bg-indigo-600 text-white py-3 rounded-lg hover:bg-indigo-700 transition duration-200 disabled:opacity-50 disabled:cursor-not-allowed">
                    <span x-show="!loginLoading">Login</span>
                    <span x-show="loginLoading">
                        <i class="fas fa-spinner fa-spin mr-2"></i>Logging in...
                    </span>
                </button>
            </form>

            <!-- Quick Test Logins (Remove in production) -->
            <div class="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
                <p class="text-xs font-semibold text-gray-700 mb-2">Quick Test Logins:</p>
                <div class="space-y-2 text-xs">
                    <button @click="quickLogin('admin', 'admin123')" class="w-full text-left px-3 py-2 bg-indigo-50 rounded hover:bg-indigo-100">
                        <i class="fas fa-user-shield mr-2"></i>Admin: admin / admin123
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function authSystem() {
            return {
                loginForm: {
                    email_or_username: '',
                    password: ''
                },
                showPassword: false,
                loginLoading: false,
                loginError: '',

                init() {
                    // Check if already logged in
                    const token = localStorage.getItem('access_token');
                    const user = localStorage.getItem('user_data');
                    
                    if (token && user) {
                        const userData = JSON.parse(user);
                        this.redirectToDashboard(userData.role);
                    }
                },

                async login() {
                    this.loginLoading = true;
                    this.loginError = '';
                    
                    try {
                        const response = await fetch('/api/v1/auth/login/', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(this.loginForm)
                        });
                        
                        const data = await response.json();
                        
                        if (data.success) {
                            // Store tokens and user data
                            localStorage.setItem('access_token', data.tokens.access);
                            localStorage.setItem('refresh_token', data.tokens.refresh);
                            localStorage.setItem('user_data', JSON.stringify(data.user));
                            
                            // Redirect based on role
                            this.redirectToDashboard(data.user.role);
                        } else {
                            this.loginError = Object.values(data.errors).flat().join(', ') || 'Login failed';
                        }
                    } catch (error) {
                        this.loginError = 'Network error. Please try again.';
                        console.error('Login error:', error);
                    } finally {
                        this.loginLoading = false;
                    }
                },

                quickLogin(username, password) {
                    this.loginForm.email_or_username = username;
                    this.loginForm.password = password;
                    this.login();
                },

                redirectToDashboard(role) {
                    if (role === 'admin' || role === 'super_admin') {
                        window.location.href = '/dashboard/admin/';
                    } else if (role === 'teacher') {
                        window.location.href = '/dashboard/teacher/';
                    } else if (role === 'parent') {
                        window.location.href = '/dashboard/parent/';
                    } else if (role === 'student') {
                        window.location.href = '/dashboard/student/';
                    } else {
                        window.location.href = '/';
                    }
                }
            }
        }
    </script>
</body>
</html>
